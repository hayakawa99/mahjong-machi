@startmindmap
* 麻雀アプリ開発（統合版）
** 環境構築
*** Python環境セットアップ
**** pymysqlインストール
**** MySQL接続テスト
*** AWS環境準備
**** Lambda
***** コード動作テスト済（捨て牌・待ち牌抽出ロジック） (済)
***** IAMロール設定 (済)
***** LambdaハンドラにAPIエンドポイント実装【NEW】 (未)
***** LambdaからRDSへの接続テスト【NEW】 (未)
**** ALB
***** 新規作成・Lambdaターゲット登録 (済)
***** セキュリティグループ設定 (済)
***** ALBのターゲットグループ & リスナールール設定【NEW】 (未)
**** RDS
***** RDSインスタンス作成 (済)
***** セキュリティグループ設定 (済)
***** テーブル設計（discards / wait_patterns）検討中
***** テーブル作成そのものは一通り完了 (済)
***** RDSパフォーマンス調整・自動スナップショット確認【NEW】 (未)

** データ準備
*** JSONデータの取得
**** tenhou_logs フォルダ作成
**** 5GB相当のデータ配置（17万ファイル）
*** JSONデータの解析
**** JSONフォーマット不一致問題発覚 → 調査・修正
**** JSONパースエラーの対応
**** JSONファイルのサブセット作成（tenhou_logs_test）

** コード確認・実装
*** Pythonスクリプト（mahjongロジック）
**** JSONログ解析
**** 待ち牌判定ロジック（is_winning_hand等）の確認
**** discards.csv / wait_patterns.csv 生成処理（一時的にCSV出力する仕組み）
*** スクリプト開発
**** JSON処理スクリプト作成
***** json.load() でのデータロード
***** エラー処理（不正JSONスキップ）
***** JSONデータのカスタムパース
**** DB格納処理実装
***** discards / wait_patterns テーブル作成
***** バルクINSERT対応
***** DBトランザクション最適化
*** 高速化対応
**** バッチINSERT
**** 10,000ファイルごとのログ表示
**** JSON処理の並列化（未実装）

** 検証・デバッグ
*** JSONパーステスト（tenhou_logs_testで成功）
*** RDSへのデータINSERT確認
*** フルデータセット（tenhou_logs）でのエラー発生
**** JSONが存在しないと表示される問題
**** tenhou_logs_testでは正常動作
**** tenhou_logsとtenhou_logs_testの違いを調査中

** 今後やるべきこと【NEW】
*** UIとの接続【NEW】
**** UIフォームの送信先をALB経由のエンドポイントに変更 (未)
**** LambdaからのレスポンスをUIで表示 (未)
*** 運用・監視【NEW】
**** CloudWatch LogsでLambdaの実行ログをモニタリング (未)
*** リリース前チェック
**** 運用監視体制の強化
***** SNSアラーム設定 (不要)
***** 障害時の通知・対応フロー作成 (不要)
**** セキュリティ・ドメイン周り
***** SSL証明書(ACM)導入 (やる予定)
***** Route53等による独自ドメイン設定 (やる予定)
***** 認証・認可の導入検討 (不要)
**** スケール・パフォーマンス検証
***** 負荷試験 (不要)
***** クエリ最適化・インデックス検証 (やる予定)
***** Lambdaメモリ・タイムアウト設定確認 (やる予定)
**** バックアップ・リカバリ計画
***** RDS自動スナップショット設定 (不要)
***** リストア手順ドキュメント化 (不要)
**** ユーザー向けドキュメント整備
***** 使用ガイド・問い合わせ窓口の明確化 (不要)
***** 運用ポリシー(更新頻度等)策定 (不要)
@endmindmap
